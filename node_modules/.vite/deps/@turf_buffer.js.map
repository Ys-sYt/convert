{
  "version": 3,
  "sources": ["../../@turf/meta/dist/es/index.js", "../../@turf/bbox/dist/es/index.js", "../../@turf/center/dist/es/index.js", "../../turf-jsts/jsts.mjs", "../../d3-geo/src/adder.js", "../../d3-geo/src/math.js", "../../d3-geo/src/noop.js", "../../d3-geo/src/stream.js", "../../d3-geo/src/area.js", "../../d3-geo/src/cartesian.js", "../../d3-geo/src/bounds.js", "../../d3-geo/src/compose.js", "../../d3-geo/src/rotation.js", "../../d3-geo/src/circle.js", "../../d3-geo/src/clip/buffer.js", "../../d3-geo/src/clip/line.js", "../../d3-geo/src/pointEqual.js", "../../d3-geo/src/clip/polygon.js", "../../d3-array/src/ascending.js", "../../d3-array/src/bisector.js", "../../d3-array/src/bisect.js", "../../d3-array/src/array.js", "../../d3-array/src/ticks.js", "../../d3-array/src/merge.js", "../../d3-geo/src/clip/extent.js", "../../d3-geo/src/polygonContains.js", "../../d3-geo/src/length.js", "../../d3-geo/src/identity.js", "../../d3-geo/src/path/area.js", "../../d3-geo/src/path/bounds.js", "../../d3-geo/src/path/context.js", "../../d3-geo/src/path/measure.js", "../../d3-geo/src/path/string.js", "../../d3-geo/src/clip/index.js", "../../d3-geo/src/clip/antimeridian.js", "../../d3-geo/src/clip/circle.js", "../../d3-geo/src/transform.js", "../../d3-geo/src/projection/fit.js", "../../d3-geo/src/projection/resample.js", "../../d3-geo/src/projection/index.js", "../../d3-geo/src/projection/azimuthal.js", "../../d3-geo/src/projection/azimuthalEqualArea.js", "../../d3-geo/src/projection/azimuthalEquidistant.js", "../../d3-geo/src/projection/mercator.js", "../../d3-geo/src/projection/equirectangular.js", "../../d3-geo/src/projection/gnomonic.js", "../../d3-geo/src/projection/naturalEarth1.js", "../../d3-geo/src/projection/orthographic.js", "../../d3-geo/src/projection/stereographic.js", "../../d3-geo/src/projection/transverseMercator.js", "../../@turf/buffer/dist/es/index.js"],
  "sourcesContent": ["import { feature, lineString, isObject, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n    if (feature.geometry === null) return;\n    var type = feature.geometry.type;\n    var coords = feature.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordAll, coordEach, coordReduce, featureEach, featureReduce, findPoint, findSegment, flattenEach, flattenReduce, geomEach, geomReduce, lineEach, lineReduce, propEach, propReduce, segmentEach, segmentReduce };\n", "import { coordEach } from \"@turf/meta\";\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexport default bbox;\n", "import bbox from \"@turf/bbox\";\nimport { point, } from \"@turf/helpers\";\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Point\n * @param {Object} [options.bbox={}] Translate GeoJSON BBox to Point\n * @param {Object} [options.id={}] Translate GeoJSON Id to Point\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\n * @example\n * var features = turf.points([\n *   [-97.522259, 35.4691],\n *   [-97.502754, 35.463455],\n *   [-97.508269, 35.463245]\n * ]);\n *\n * var center = turf.center(features);\n *\n * //addToMap\n * var addToMap = [features, center]\n * center.properties['marker-size'] = 'large';\n * center.properties['marker-color'] = '#000';\n */\nfunction center(geojson, options) {\n    if (options === void 0) { options = {}; }\n    var ext = bbox(geojson);\n    var x = (ext[0] + ext[2]) / 2;\n    var y = (ext[1] + ext[3]) / 2;\n    return point([x, y], options.properties, options);\n}\nexport default center;\n", "/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n", "// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n", "export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n", "export default function noop() {}\n", "function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n", "import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n", "import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n", "export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n", "import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n", "import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n", "import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n", "export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n", "import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n", "import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n", "export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n", "import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n", "var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n", "export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n", "import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n", "import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n", "import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n", "export default function(x) {\n  return x;\n}\n", "import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n", "import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n", "import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n", "import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n", "export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n", "import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n", "import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n", "import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n", "export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n", "import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream));\n\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n", "import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n", "import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport {clipExtent} from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {degrees, radians, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n", "import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n", "import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n", "import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n", "import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n", "import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n", "import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n", "import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n", "import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n", "import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n", "import center from '@turf/center';\nimport { GeoJSONReader, BufferOp, GeoJSONWriter } from 'turf-jsts';\nimport { featureEach, geomEach } from '@turf/meta';\nimport { geoAzimuthalEquidistant } from 'd3-geo';\nimport { featureCollection, earthRadius, radiansToLength, lengthToRadians, feature } from '@turf/helpers';\n\n/**\n * Calculates a buffer for input features for a given radius. Units supported are miles, kilometers, and degrees.\n *\n * When using a negative radius, the resulting geometry may be invalid if\n * it's too small compared to the radius magnitude. If the input is a\n * FeatureCollection, only valid members will be returned in the output\n * FeatureCollection - i.e., the output collection may have fewer members than\n * the input, or even be empty.\n *\n * @name buffer\n * @param {FeatureCollection|Geometry|Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer (negative values are allowed)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] any of the options supported by turf units\n * @param {number} [options.steps=8] number of steps\n * @returns {FeatureCollection|Feature<Polygon|MultiPolygon>|undefined} buffered features\n * @example\n * var point = turf.point([-90.548630, 14.616599]);\n * var buffered = turf.buffer(point, 500, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [point, buffered]\n */\nfunction buffer(geojson, radius, options) {\n  // Optional params\n  options = options || {};\n\n  // use user supplied options or default values\n  var units = options.units || \"kilometers\";\n  var steps = options.steps || 8;\n\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (typeof options !== \"object\") throw new Error(\"options must be an object\");\n  if (typeof steps !== \"number\") throw new Error(\"steps must be an number\");\n\n  // Allow negative buffers (\"erosion\") or zero-sized buffers (\"repair geometry\")\n  if (radius === undefined) throw new Error(\"radius is required\");\n  if (steps <= 0) throw new Error(\"steps must be greater than 0\");\n\n  var results = [];\n  switch (geojson.type) {\n    case \"GeometryCollection\":\n      geomEach(geojson, function (geometry) {\n        var buffered = bufferFeature(geometry, radius, units, steps);\n        if (buffered) results.push(buffered);\n      });\n      return featureCollection(results);\n    case \"FeatureCollection\":\n      featureEach(geojson, function (feature) {\n        var multiBuffered = bufferFeature(feature, radius, units, steps);\n        if (multiBuffered) {\n          featureEach(multiBuffered, function (buffered) {\n            if (buffered) results.push(buffered);\n          });\n        }\n      });\n      return featureCollection(results);\n  }\n  return bufferFeature(geojson, radius, units, steps);\n}\n\n/**\n * Buffer single Feature/Geometry\n *\n * @private\n * @param {Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer\n * @param {string} [units='kilometers'] any of the options supported by turf units\n * @param {number} [steps=8] number of steps\n * @returns {Feature<Polygon|MultiPolygon>} buffered feature\n */\nfunction bufferFeature(geojson, radius, units, steps) {\n  var properties = geojson.properties || {};\n  var geometry = geojson.type === \"Feature\" ? geojson.geometry : geojson;\n\n  // Geometry Types faster than jsts\n  if (geometry.type === \"GeometryCollection\") {\n    var results = [];\n    geomEach(geojson, function (geometry) {\n      var buffered = bufferFeature(geometry, radius, units, steps);\n      if (buffered) results.push(buffered);\n    });\n    return featureCollection(results);\n  }\n\n  // Project GeoJSON to Azimuthal Equidistant projection (convert to Meters)\n  var projection = defineProjection(geometry);\n  var projected = {\n    type: geometry.type,\n    coordinates: projectCoords(geometry.coordinates, projection),\n  };\n\n  // JSTS buffer operation\n  var reader = new GeoJSONReader();\n  var geom = reader.read(projected);\n  var distance = radiansToLength(lengthToRadians(radius, units), \"meters\");\n  var buffered = BufferOp.bufferOp(geom, distance, steps);\n  var writer = new GeoJSONWriter();\n  buffered = writer.write(buffered);\n\n  // Detect if empty geometries\n  if (coordsIsNaN(buffered.coordinates)) return undefined;\n\n  // Unproject coordinates (convert to Degrees)\n  var result = {\n    type: buffered.type,\n    coordinates: unprojectCoords(buffered.coordinates, projection),\n  };\n\n  return feature(result, properties);\n}\n\n/**\n * Coordinates isNaN\n *\n * @private\n * @param {Array<any>} coords GeoJSON Coordinates\n * @returns {boolean} if NaN exists\n */\nfunction coordsIsNaN(coords) {\n  if (Array.isArray(coords[0])) return coordsIsNaN(coords[0]);\n  return isNaN(coords[0]);\n}\n\n/**\n * Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} projected coordinates\n */\nfunction projectCoords(coords, proj) {\n  if (typeof coords[0] !== \"object\") return proj(coords);\n  return coords.map(function (coord) {\n    return projectCoords(coord, proj);\n  });\n}\n\n/**\n * Un-Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to un-project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} un-projected coordinates\n */\nfunction unprojectCoords(coords, proj) {\n  if (typeof coords[0] !== \"object\") return proj.invert(coords);\n  return coords.map(function (coord) {\n    return unprojectCoords(coord, proj);\n  });\n}\n\n/**\n * Define Azimuthal Equidistant projection\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Base projection on center of GeoJSON\n * @returns {GeoProjection} D3 Geo Azimuthal Equidistant Projection\n */\nfunction defineProjection(geojson) {\n  var coords = center(geojson).geometry.coordinates;\n  var rotation = [-coords[0], -coords[1]];\n  return geoAzimuthalEquidistant().rotate(rotation).scale(earthRadius);\n}\n\nexport default buffer;\n"],
  "mappings": "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",
  "names": ["isGeometryCollection", "isGeometryCollection", "es_default", "NumberUtil", "x1", "Error", "IllegalArgumentException", "Double", "isNaN", "Comparable", "Clonable", "Comparator", "Coordinate", "interfaces_", "getClass", "hashCode", "DimensionalComparator", "compare", "CoordinateSequenceFactory", "Location", "MathUtil", "min", "max", "StringBuffer", "toString", "Integer", "compareTo", "Character", "DD", "magnitude", "scale", "equals", "exp", "clone", "intValue", "sqr", "sqrt", "isNegative", "copy", "CGAlgorithmsDD", "y1", "det", "signum", "CoordinateSequence", "setOrdinate", "getOrdinate", "Exception", "NotRepresentableException", "System", "HCoordinate", "getY", "getX", "getCoordinate", "intersection", "Envelope", "distance", "init", "intersects", "WKTParser", "point", "array", "multipoint", "linestring", "linearring", "multilinestring", "polygon", "multipolygon", "geometrycollection", "WKTWriter", "write", "RuntimeException", "AssertionFailedException", "Assert", "LineIntersector", "RobustLineIntersector", "computeIntersection", "RobustDeterminant", "orientationIndex", "signOfDet2x2", "sign", "swap", "RayCrossingCounter", "CGAlgorithms", "sum", "x0", "y0", "next", "isCCW", "locatePointInRing", "GeometryComponentFilter", "Geometry", "getArea", "geometryChangedFilter", "filter", "CoordinateFilter", "BoundaryNodeRule", "Mod2BoundaryNodeRule", "isInBoundary", "EndPointBoundaryNodeRule", "MultiValentEndPointBoundaryNodeRule", "MonoValentEndPointBoundaryNodeRule", "Collection", "add", "size", "Iterator", "remove", "List", "get", "isEmpty", "ArrayList", "clear", "addAll", "iterator", "toArray", "Iterator_", "hasNext", "CoordinateList", "staticAccessors", "toCoordinateArray", "closeRing", "CoordinateArrays", "coordinate", "ForwardComparator", "BidirectionalComparator", "Map", "SortedMap", "HashSet", "contains", "Lineal", "Arrays", "a", "Dimension", "GeometryFilter", "CoordinateSequenceFilter", "GeometryCollection", "envelope", "getGeometryN", "getCoordinates", "area", "equalsExact", "normalize", "getDimension", "getLength", "getNumGeometries", "reverse", "getBoundary", "MultiLineString", "isClosed", "BoundaryOp", "Counter", "DecimalFormat", "StringUtil", "depth", "CoordinateSequences", "isRing", "LineString", "Puntal", "Point", "Polygonal", "Polygon", "isRectangle", "minCoordinate", "MultiPoint", "isValid", "LinearRing", "MultiPolygon", "GeometryEditor", "NoOpGeometryOperation", "edit", "CoordinateOperation", "CoordinateSequenceOperation", "CoordinateArraySequence", "getCoordinateCopy", "expandEnvelope", "CoordinateArraySequenceFactory", "create", "HashMap", "put", "values", "entrySet", "PrecisionModel", "Type", "readResolve", "GeometryFactory", "getSRID", "getPrecisionModel", "GeoJSONParser", "read", "parse", "extract", "feature", "featureCollection", "GeoJSONReader", "GeoJSONWriter", "Position", "RightmostEdgeFinder", "orientation", "TopologyException", "LinkedList", "BufferSubgraph", "getEnvelope", "TopologyLocation", "isNull", "temp", "le", "Label", "count", "setAllLocations", "setAllLocationsIfNull", "isLine", "merge", "flip", "getLocation", "isArea", "isAnyNull", "setLocation", "isEqualOnSide", "allPositionsEqual", "EdgeRing", "MinimalEdgeRing", "MaximalEdgeRing", "GraphComponent", "isVisited", "setInResult", "isInResult", "getLabel", "isCovered", "Node", "isIsolated", "print", "setLabel", "getEdges", "mergeLabel", "NodeMap", "Quadrant", "diff", "EdgeEnd", "angle", "getEdge", "DirectedEdge", "getDepth", "setVisited", "setDepth", "isInteriorAreaEdge", "depthDelta", "NodeFactory", "PlanarGraph", "find", "addNode", "getNodes", "findEdge", "linkResultDirectedEdges", "PolygonBuilder", "containsPoint", "Boundable", "ItemBoundable", "getBounds", "PriorityQueue", "ItemVisitor", "SpatialIndex", "AbstractNode", "Collections", "sort", "BoundablePair", "AbstractSTRtree", "insert", "query", "IntersectsOp", "ItemDistance", "STRtree", "createNode", "createParentBoundables", "STRtreeNode", "SegmentPointComparator", "octant", "SegmentNode", "isEndPoint", "SegmentNodeList", "Octant", "SegmentString", "NodableSegmentString", "NodedSegmentString", "setData", "getData", "addIntersection", "LineSegment", "toGeometry", "midPoint", "MonotoneChainOverlapAction", "MonotoneChain", "MonotoneChainBuilder", "Noder", "getNodedSubstrings", "SinglePassNoder", "MCIndexNoder", "computeNodes", "SegmentOverlapAction", "overlap", "BufferParameters", "isSingleSided", "BufferInputLineSimplifier", "isConcave", "simplify", "OffsetSegmentString", "setPrecisionModel", "Angle", "radians", "OffsetSegmentGenerator", "OffsetCurveBuilder", "SubgraphDepthLocater", "DepthSegment", "Triangle", "signedArea", "isAcute", "interpolateZ", "longestSideLength", "circumcentre", "area3D", "centroid", "inCentre", "OffsetCurveSetBuilder", "PointOnGeometryLocator", "GeometryCollectionIterator", "SimplePointInAreaLocator", "locate", "isPointInRing", "EdgeEndStar", "DirectedEdgeStar", "linkAllDirectedEdges", "computeDepths", "findCoveredLineEdges", "computeLabelling", "OverlayNodeFactory", "OrientedCoordinateArray", "EdgeList", "SegmentIntersector", "isDone", "IntersectionAdder", "processIntersections", "hasIntersection", "EdgeIntersection", "getDistance", "EdgeIntersectionList", "addSplitEdges", "addEndpoints", "createSplitEdge", "isIntersection", "MonotoneChainIndexer", "getChainStartIndices", "findChainEnd", "toIntArray", "MonotoneChainEdge", "getMaxX", "getMinX", "Depth", "Edge", "addIntersections", "updateIM", "BufferBuilder", "ScaledNoder", "NodingValidator", "hasInteriorIntersection", "HotPixel", "MonotoneChainSelectAction", "select", "MCIndexPointSnapper", "HotPixelSnapAction", "InteriorIntersectionFinderAdder", "MCIndexSnapRounder", "BufferOp", "setQuadrantSegments", "setEndCapStyle", "PointPairDistance", "DistanceToPointFinder", "BufferCurveMaximumDistanceFinder", "MaxPointDistanceFilter", "MaxMidpointDistanceFilter", "isGeometryChanged", "getMaxPointDistance", "PolygonExtracter", "getPolygons", "LinearComponentExtracter", "PointLocator", "GeometryLocation", "getSegmentIndex", "PointExtracter", "ConnectedElementLocationFilter", "getLocations", "DistanceOp", "nearestPoints", "setMinimum", "initialize", "setMaximum", "DistanceToPoint", "computeDistance", "DiscreteHausdorffDistance", "MaxDensifiedByFractionDistanceFilter", "BufferDistanceValidator", "BufferResultValidator", "getErrorIndicator", "getErrorLocation", "getErrorMessage", "BasicSegmentString", "getSegmentOctant", "InteriorIntersectionFinder", "FastNodingValidator", "getIntersections", "setFindAllIntersections", "checkInteriorIntersections", "checkValid", "EdgeNodingValidator", "GeometryCollectionMapper", "map", "LineBuilder", "build", "PointBuilder", "GeometryTransformer", "LineStringSnapper", "GeometrySnapper", "snapTo", "snap", "snapToSelf", "SnapTransformer", "transformCoordinates", "CommonBits", "CommonBitsRemover", "CommonCoordinateFilter", "getCommonCoordinate", "Translater", "SnapOverlayOp", "removeCommonBits", "getResultGeometry", "computeSnapTolerance", "SnapIfNeededOverlayOp", "overlayOp", "union", "symDifference", "difference", "computeIntersections", "SweepLineEvent", "EdgeSetIntersector", "isTrivialIntersection", "getProperIntersectionPoint", "hasProperInteriorIntersection", "hasProperIntersection", "isAdjacentSegments", "SimpleMCSweepLineIntersector", "addEdges", "IntervalRTreeNode", "NodeComparator", "IntervalRTreeLeafNode", "IntervalRTreeBranchNode", "SortedPackedIntervalRTree", "ArrayListVisitor", "visitItem", "IndexedPointInAreaLocator", "SegmentVisitor", "IntervalIndexedGeometry", "GeometryGraph", "getGeometry", "addPoint", "addPolygon", "addLineString", "getBoundaryNodes", "addPolygonRing", "addCollection", "GeometryGraphOp", "GeometryMapper", "OverlayOp", "insertUniqueEdge", "computeGeometry", "g", "FuzzyPointLocator", "PolygonalLineworkExtracter", "OffsetPointGenerator", "getPoints", "OverlayResultValidator", "GeometryCombiner", "combine", "CascadedPolygonUnion", "UnionOp", "add", "abs", "sqrt", "coordinate", "cartesian", "spherical", "sqrt", "point", "x0", "y0", "x1", "y1", "abs", "point", "compareIntersection", "n", "array", "compare", "map", "array", "x0", "y0", "x1", "y1", "abs", "compareIntersection", "polygon", "point", "ring", "visible", "polygon", "point", "angle", "sign", "intersection", "identity_default", "areaSum", "areaRingSum", "lengthSum", "polygon", "point", "abs", "abs", "point2", "sqrt", "delta", "code", "projection", "size", "project", "x0", "y0", "x1", "y1", "depth", "sqrt", "abs", "point", "project", "x0", "y0", "x1", "y1", "identity_default", "projection", "point", "x", "y", "sqrt", "size", "center", "scale", "angle", "sqrt", "sqrt", "abs", "buffer", "feature", "geometry", "buffered", "projection", "distance", "es_default"]
}
